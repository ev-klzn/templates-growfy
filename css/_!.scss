@import "_reset";
@import "_media";

body {
    line-height: 1;
    color: #000;
    font-family: "Roboto", sans-serif;
    background-color: rgb(65, 64, 64);
}

.wrapper {
    min-height: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}


// Переменные-----------------------------------------------

//основной цвет
$main: green;

// Переменные end-------------------------------------------


.block {

    // .block__container

    // &__container {}

    // .block__items

    &__items {
        display: flex;
        flex-wrap: wrap;
        row-gap: 30px;
        margin: 0px -15px;
    }

    // .block__item

    &__item {
        padding: 0px 15px;
        flex: 1 1 33.333%;
        min-width: 290px;
    }
}

// вызывем миксин
@mixin theme($color) {
    background-color: $color;
    border: 5px solid $color;
}

.item-block {
    display: flex;
    flex-direction: column;
    height: 100%;

    @media (min-width: 1140px) {
        max-width: 350px;
    }

    // .item-block__picture

    &__picture {
        padding: 0px 0px 74.285% 0px;
        // 1110 - 30 row-gap - 30 row-gap / 3 = ширина 350 карточки товара
        //высота карточки по макету делим на ширину карточки по макету и умножаем на 100
        // 260/350*100=74,285
        // + технический  клас _ibg
    }

    // .item-block__image

    // &__image {}

    // .item-block__body

    &__body {
        padding: 15px;
        display: flex;
        flex-direction: column;
        background-color: #333;
        flex: 1 1 auto;
        // позволяем увеличиваться боди

        *:not(:last-child) {
            margin: 0px 0px 15px 0px;
        }
    }

    &__title {
        font-size: 40px;
        color: #fff;
    }

    // .item-block__text

    &__text {
        line-height: 150%;
        color: #eee;
        font-size: 16px;
        flex: 1 1 100%;
        // прибиваем кнопку к низу
    }

    // .item-block__button

    &__button {
        padding: 10px 15px;
        text-align: center;
        color: #fff;
        background-color: $main;

        // два класса рядом, для уточняющего рядом класса
        &.button {
            background-color: #000;
        }

        // для вложенного класса
        .button {
            background-color: rgb(178, 13, 13);
        }

        &::before {
            content: '';

        }

        &::after {
            content: '';

        }

        &:hover {
            @include theme(green);
        }

        // loading и кнопка, для динамических классов js
        .loading & {
            background-color: rgb(223, 104, 104);
        }
    }
}

// Миксины - набор настраемого кода, должен быть выше чем выхов его кода include
// есть этот код выше чтобы миксин сработал

@mixin theme($color) {
    background-color: $color;
    border: 1px solid $color;
}

// Миксин ibg

@mixin ibg($position: center) {
    position: relative;

    img {
        object-fit: cover;
        object-position: $position;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
}

// вызывем миксин ibg и меняем значение на left

.item {
    @include ibg(left);
}


//  миксин end

// Шаблоны, не попадают в код пока мы его не вызовим

// Пример шаблона, их нельзя изменять, они статичны.
%ibg {
    position: relative;

    img {
        object-fit: cover;
        object-position: top;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
}

// вызываем шаблон

.item-block {

    &__picture {
        @extend %ibg;
    }
}

// шаблон end


// Выпадающее меню c циклом
.list {
    padding: 30px;
    // .list__item

    &__item {
        transform: translate(-100%, 0px);
        transition: 0.3s;

        @for $var from 1 to 5 {
            $delay: 0.1 * $var;

            &:nth-child(#{$var}) {
                transition-delay: $delay + s;
            }
        }

        &:not(:last-child) {
            margin-bottom: 15px;
        }
    }

    // .list__link

    &__link {
        color: white;
    }

    &:hover {
        .list__item {
            transform: translate(0px, 0px);
        }
    }
}

// Выпадающее меню end